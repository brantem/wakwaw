version: '3.8'

x-healthcheck: &healthcheck
  interval: 15s
  timeout: 5s
  start_period: 30s
  retries: 5

x-logging: &logging
  logging:
    options:
      max-size: 4m
      max-file: 10
      tag: '{{.ImageName}}/{{.Name}}/{{.ID}}'

x-deploy: &deploy
  mode: replicated
  replicas: 1
  restart_policy:
    max_attempts: 2
  rollback_config:
    parallelism: 1
  update_config:
    parallelism: 1
    failure_action: rollback
    order: start-first
  placement:
    constraints:
      - node.role == manager
  resources:
    limits:
      cpus: '0.25'
      memory: 250mb

services:
  redis:
    image: redis:7
    ports:
      - 6379
    command: redis-server --save 60 1
    volumes:
      - redis:/data
    <<: *logging
    networks:
      - internal
    deploy:
      <<: *deploy

  postgres:
    image: postgres:16-alpine
    ports:
      - 5432
    env_file:
      - ../.env
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_DB: ${PG_DATABASE}
    volumes:
      - type: tmpfs
        target: /dev/shm
        tmpfs:
          size: 134217728 # 128*2^20 bytes = 128Mb
      - postgres:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    <<: *logging
    networks:
      - internal
    deploy:
      <<: *deploy

  registry:
    image: registry:2
    ports:
      - target: 5000
        published: 5000
        mode: host
    volumes:
      - ./registry/config.yml:/etc/distribution/config.yml
    <<: *logging
    networks:
      - internal
      - external
    deploy:
      <<: *deploy

  minio:
    image: quay.io/minio/minio
    ports:
      - 9000
      - 9001
    env_file:
      - ../.env
    environment:
      - MINIO_ROOT_USER=${MINIO_USERNAME}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
      - MINIO_BROWSER_REDIRECT_URL=https://${NAME}.${DOMAIN}/minio
    volumes:
      - ./minio/data:/data
    command: server /data --console-address ":9001" --quiet --json
    healthcheck:
      test: curl -sf http://localhost:9000/minio/health/live || exit 1
      <<: *healthcheck
    <<: *logging
    networks:
      - internal
      - external
    deploy:
      <<: *deploy
      labels:
        - 'traefik.http.middlewares.strip-minio.stripprefix.prefixes=/minio'

        - 'traefik.enable=true'
        - 'traefik.http.routers.minio.rule=Host(`${NAME}.${DOMAIN}`) && PathPrefix(`/minio`)'
        - 'traefik.http.routers.minio.middlewares=strip-minio,no-robots'
        - 'traefik.http.services.minio.loadbalancer.server.port=9001'
        - 'traefik.docker.lbswarm=true'

volumes:
  redis:
  postgres:

networks:
  internal:
    external: true
  external:
    external: true
